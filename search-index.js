var N=null,E="",T="t",U="u",searchIndex={};
var r_0a="set_best_param",r_0b="Log general info",r_0c="ArgminTranspose",r_1a="set current parameter vector",r_1b="This should be used to log iteration data only (because…",r_1c="ArgminInv",r_2a="argminresult",r_2b="bool",r_2c="ArgminSolver",r_3a="set_termination_reason",r_3b="argmincheckpoint",r_3c="ArgminIter",r_4a="set_max_iters",r_4b="default",r_4c="ArgminLog",r_5a="max_iters",r_5b="clone",r_5c="ArgminWrite",r_6a="cur_iter",r_6b="argminlogger",r_6c="ArgminOp",r_7a="increment_iter",r_7b="nooperator",r_7c="ArgminLineSearch",r_8a="cur_cost",r_8b="minimalnooperator",r_8c="ArgminTrustRegion",r_9a="set_cur_cost",r_9b="argminwriter",r_9c="ArgminNLCGBetaUpdate",r_Aa="argmin_core::modcholesky",r_Ab="set_checkpoint_mode",r_Ac="ArgminBase",r_Ba="decomposition",r_Bb="Hessian",r_Bc="ArgminSlogLogger",r_Ca="Calculation of the Jacobian J(x) of a vector function `fs`…",r_Cb="log_info",r_Cc="ArgminLogger",r_Da="Calculation of the product of the Jacobian J(x) of a…",r_Db="log_iter",r_Dc="NoOperator",r_Ea="Calculation of the product of the Hessian H(x) of a…",r_Eb="Param",r_Ec="MinimalNoOperator",r_Fa="Dot/scalar product of `T` and `self`",r_Fb="write",r_Fc="WriteToFile",r_Ga="Return zero(s)",r_Gb="Output",r_Gc="ArgminWriter",r_Ha="Add a `T` to `self`",r_Hb="Set the initial step length",r_Hc="ArgminCheckpoint",r_Ia="Subtract a `T` from `self`",r_Ib="Set the gradient at the starting point",r_Ic="Decomposition",r_Ja="(Pointwise) Multiply a `T` with `self`",r_Jb="param",r_Jc="GershgorinCircles",r_Ka="(Pointwise) Divide a `T` by `self`",r_Kb="try_from",r_Kc="ModCholeskyGMW81",r_La="Add a `T` scaled by an `U` to `self`",r_Lb="borrow",r_Lc="ModCholeskySE99",r_Ma="Subtract a `T` scaled by an `U` from `self`",r_Mb="type_id",r_Mc="ModCholeskySE90",r_Na="Compute the l2-norm (`U`) of `self`",r_Nb="typeid",r_Nc="FiniteDiff",r_Oa="apply",r_Ob="borrow_mut",r_Oc="PerturbationVector",r_Pa="gradient",r_Pb="try_into",r_Pc="ArgminDot",r_Qa="hessian",r_Qb="to_string",r_Qc="ArgminWeightedDot",r_Ra="modify",r_Rb="from",r_Rc="ArgminZero",r_Sa="cur_param",r_Sb="into",r_Sc="ArgminEye",r_Ta="cur_grad",r_Tb="to_owned",r_Tc="ArgminAdd",r_Ua="cur_hessian",r_Ub="clone_into",r_Uc="ArgminSub",r_Va="return current gradient",r_Vb="as_fail",r_Vc="ArgminMul",r_Wa="set_cur_param",r_Wb="argmin_core::finitediff",r_Wc="ArgminDiv",r_Xa="set_cur_grad",r_Xb="fail",r_Xc="ArgminScaledAdd",r_Ya="set_cur_hessian",r_Yb="formatter",r_Yc="ArgminScaledSub",r_Za="set current gradient",r_Zb="perturbationvector",r_Zc="ArgminNorm",r_aa="argmin_core",r_ab="Get current cost function value",r_ac="ordering",r_ad="ArgminIterData",r_ba="argmin_core::ArgminError",r_bb="best_cost",r_bc="option",r_bd="Error",r_ca="text",r_cb="set_best_cost",r_cc="partial_cmp",r_da="Aborted",r_db="set_target_cost",r_dc="fmt",r_ea="argminkv",r_eb="add_logger",r_ec="hash",r_fa="self",r_fb="add_writer",r_fc="serialize",r_ga="f64",r_gb="increment_cost_func_count",r_gc="__s",r_ha="u64",r_hb="Increment the cost function evaluation count",r_hc="deserialize",r_ia="Return the gradient evaluation count",r_ib="increase_cost_func_count",r_ic="__d",r_ja="termination_reason",r_jb="Increaese the cost function evaluation count by a given…",r_jc="backtrace",r_ka="terminationreason",r_kb="cost_func_count",r_kc="cause",r_la="terminated",r_lb="Return the cost function evaluation count",r_lc="context",r_ma="result",r_mb="increment_grad_func_count",r_mc="compat",r_na="duration",r_nb="Increment the gradient evaluation count",r_nc="causes",r_oa="error",r_ob="increase_grad_func_count",r_oc="Attempts to downcast this `Error` to a particular `Fail`…",r_pa="Constructor",r_pb="Increase the gradient evaluation count by a given value",r_pc="mod_cholesky_gmw81",r_qa="str",r_qb="grad_func_count",r_qc="Computes the modified Cholesky decomposition with the…",r_ra="arc",r_rb="increment_hessian_func_count",r_rc="mod_cholesky_se99",r_sa="argminlog",r_sb="Increment the hessian evaluation count",r_sc="Computes the modified Cholesky decomposition with the SE99…",r_ta="new",r_tb="increase_hessian_func_count",r_tc="mod_cholesky_se90",r_ua="push",r_ub="Increase the hessian evaluation count by a given value",r_uc="Computes the modified Cholesky decomposition with the SE90…",r_va="argminwrite",r_vb="hessian_func_count",r_vc="ArgminKV",r_wa="checkpointmode",r_wb="set_checkpoint_dir",r_wc="ArgminResult",r_xa="string",r_xb="Set checkpoint directory",r_xc="ArgminError",r_ya="arraybase",r_yb="set_checkpoint_prefix",r_yc="TerminationReason",r_za="usize",r_zb="Set checkpoint prefix",r_zc="CheckpointMode";

searchIndex[r_aa]={"doc":"Argmin Optimizaton toolbox core","i":[[3,r_bd,r_aa,"The `Error` type, which can contain any failure.",N,N],[3,r_Ac,E,"Storage for data needed by most solvers",N,N],[3,r_vc,E,"A simple key-value storage",N,N],[12,"kv",E,"The actual key value storage",0,N],[3,r_Bc,E,"A logger based on `slog`",N,N],[3,r_Cc,E,"Container for `ArgminLog`gers",N,N],[3,r_Dc,E,E,N,N],[3,r_Ec,E,E,N,N],[3,r_Fc,E,E,N,N],[3,r_Gc,E,E,N,N],[3,r_wc,E,"Return struct for all solvers.",N,N],[12,r_Jb,E,"Final parameter vector",1,N],[12,"cost",E,"Final cost value",1,N],[12,"iters",E,"Number of iterations",1,N],[12,r_la,E,"Indicated whether it terminated or not",1,N],[12,r_ja,E,"Reason of termination",1,N],[3,r_Hc,E,E,N,N],[3,r_ad,E,"The datastructure which is returned by the `next_iter`…",N,N],[4,r_xc,E,E,N,N],[13,"InvalidParameter",E,"Indicates and invalid parameter",2,N],[12,r_ca,r_ba,E,2,N],[13,"NotImplemented",r_aa,"Indicates that a function is not implemented",2,N],[12,r_ca,r_ba,E,2,N],[13,"NotInitialized",r_aa,"Indicates that a function is not initialized",2,N],[12,r_ca,r_ba,E,2,N],[13,"ConditionViolated",r_aa,"Indicates that a condition is violated",2,N],[12,r_ca,r_ba,E,2,N],[13,"CheckpointNotFound",r_aa,"Checkpoint was not found",2,N],[12,r_ca,r_ba,E,2,N],[13,"ImpossibleError",r_aa,"Indicates an impossible error",2,N],[12,r_ca,r_ba,E,2,N],[4,r_yc,r_aa,"Indicates why the optimization algorithm stopped",N,N],[13,"NotTerminated",E,"In case it has not terminated yet",3,N],[13,"MaxItersReached",E,"Maximum number of iterations reached",3,N],[13,"TargetCostReached",E,"Target cost function value reached",3,N],[13,"TargetPrecisionReached",E,"Target precision reached",3,N],[13,"AcceptedStallIterExceeded",E,"Acceped stall iter exceeded",3,N],[13,"BestStallIterExceeded",E,"Best stall iter exceeded",3,N],[13,"LineSearchConditionMet",E,"Condition for Line search met",3,N],[13,r_da,E,r_da,3,N],[4,r_zc,E,E,N,N],[13,"Never",E,E,4,N],[13,"Every",E,E,4,N],[13,"Always",E,E,4,N],[5,"load_checkpoint",E,E,N,[[["p"]],[r_ma,[r_oa]]]],[0,"macros",E,"Macros # Macros",N,N],[11,r_ta,E,r_pa,5,N],[11,"kv_for_logs",E,"Return the KV for the initial logging",5,[[[r_fa]],[r_ea]]],[11,"kv_for_iter",E,"Return the KV for logging of the iterations",5,[[[r_fa]],[r_ea]]],[11,"reset",E,"Reset `self` to its initial state.",5,[[[r_fa]]]],[11,r_Oa,E,"Apply the operator to `param`",5,N],[11,r_Pa,E,"Compute the gradient at `param`",5,N],[11,r_Qa,E,"Compute the hessian at `param`",5,N],[11,r_Ra,E,"Modify a `param` with the `modify` method of `operator`.",5,N],[11,r_Wa,E,"Set the current parameter vector",5,N],[11,r_Sa,E,"Return the current parameter vector",5,N],[11,r_0a,E,"Set the new best parameter vector",5,N],[11,"best_param",E,"Return the current best parameter vector",5,N],[11,r_9a,E,"Set the current cost function value",5,[[[r_fa],[r_ga]],[r_fa]]],[11,r_8a,E,"Return the current cost function value",5,[[[r_fa]],[r_ga]]],[11,r_cb,E,"Set the cost function value of the current best parameter…",5,[[[r_fa],[r_ga]],[r_fa]]],[11,r_bb,E,"Return the cost function value of the current best…",5,[[[r_fa]],[r_ga]]],[11,r_Xa,E,"Set the current gradient",5,N],[11,r_Ta,E,"Return the current gradient",5,N],[11,r_Ya,E,"Set the current hessian",5,N],[11,r_Ua,E,"Return the current hessian",5,N],[11,r_db,E,"Set the target cost function value",5,[[[r_fa],[r_ga]],[r_fa]]],[11,"target_cost",E,"Return the target cost function value",5,[[[r_fa]],[r_ga]]],[11,r_7a,E,"Increment the number of iterations.",5,[[[r_fa]],[r_fa]]],[11,r_6a,E,"Return the current number of iterations",5,[[[r_fa]],[r_ha]]],[11,r_gb,E,r_hb,5,[[[r_fa]],[r_fa]]],[11,r_ib,E,r_jb,5,[[[r_fa],[r_ha]],[r_fa]]],[11,r_kb,E,r_lb,5,[[[r_fa]],[r_ha]]],[11,r_mb,E,r_nb,5,[[[r_fa]],[r_fa]]],[11,r_ob,E,r_pb,5,[[[r_fa],[r_ha]],[r_fa]]],[11,r_qb,E,r_ia,5,[[[r_fa]],[r_ha]]],[11,r_rb,E,r_sb,5,[[[r_fa]],[r_fa]]],[11,r_tb,E,r_ub,5,[[[r_fa],[r_ha]],[r_fa]]],[11,r_vb,E,r_ia,5,[[[r_fa]],[r_ha]]],[11,r_4a,E,"Set the maximum number of iterations.",5,[[[r_fa],[r_ha]],[r_fa]]],[11,r_5a,E,"Return the maximum number of iterations",5,[[[r_fa]],[r_ha]]],[11,r_3a,E,"Set the `TerminationReason`",5,[[[r_fa],[r_ka]],[r_fa]]],[11,r_ja,E,"Return the `TerminationReason`",5,[[[r_fa]],[r_ka]]],[11,"termination_reason_text",E,"Return the textual representation of the `TerminationReason`",5,[[[r_fa]],[r_qa]]],[11,r_la,E,"Return whether the algorithm has terminated or not",5,[[[r_fa]],[r_2b]]],[11,r_ma,E,"Return the result.",5,[[[r_fa]],[r_2a]]],[11,"set_total_time",E,"Set the total time needed by the solver",5,[[[r_fa],[r_na]],[r_fa]]],[11,"total_time",E,"Return the total time",5,[[[r_fa]],[r_na]]],[11,r_eb,E,"Add a logger to the list of loggers",5,[[[r_fa],[r_ra,[r_sa]]],[r_fa]]],[11,r_fb,E,"Add a writer to the list of writers",5,[[[r_fa],[r_ra,[r_va]]],[r_fa]]],[11,r_Db,E,"Log a `kv`",5,[[[r_fa],[r_ea]],[r_ma,[r_oa]]]],[11,r_Cb,E,"Log a message and a `kv`",5,[[[r_fa],[r_qa],[r_ea]],[r_ma,[r_oa]]]],[11,r_Fb,E,"Write (TODO)",5,N],[11,r_wb,E,r_xb,5,[[[r_fa],[r_qa]]]],[11,r_yb,E,r_zb,5,[[[r_fa],[r_qa]]]],[11,r_Ab,E,E,5,[[[r_fa],[r_wa]]]],[11,"store_checkpoint",E,E,5,[[[r_fa],[T]],[r_ma,[r_oa]]]],[11,r_ta,E,r_pa,0,[[],[r_fa]]],[11,r_ua,E,"Push a key-value pair to the `kv` vector.",0,[[[r_fa],[r_qa],[T]],[r_fa]]],[11,"merge",E,"Merge another `kv` into `self.kv`",0,[[[r_fa],[r_ea]],[r_fa]]],[11,"term",E,"Log to the terminal in a blocking way",6,[[],[r_ra]]],[11,"term_noblock",E,"Log to the terminal in a non-blocking way (in case of…",6,[[],[r_ra]]],[11,"file",E,"Log JSON to a file in a blocking way",6,[[[r_qa]],[r_ma,[r_ra,r_oa]]]],[11,"file_noblock",E,"Log JSON to a file in a non-blocking way (in case of…",6,[[[r_qa]],[r_ma,[r_ra,r_oa]]]],[11,r_ta,E,r_pa,7,[[],[r_fa]]],[11,r_ua,E,"Push another `ArgminLog` to the `logger` field",7,[[[r_fa],[r_ra,[r_sa]]],[r_fa]]],[11,r_ta,E,E,8,[[],[r_fa]]],[11,r_ta,E,E,9,[[],[r_fa]]],[11,r_ta,E,E,10,[[],[r_ra]]],[11,r_ta,E,E,11,[[],[r_fa]]],[11,r_ua,E,E,11,[[[r_fa],[r_ra,[r_va]]],[r_fa]]],[11,r_ta,E,r_pa,1,[[[T],[r_ga],[r_ha],[r_ka]],[r_fa]]],[11,r_ta,E,E,12,[[[r_qa],[r_wa]],[r_ma,[r_oa]]]],[11,"set_dir",E,E,12,[[[r_fa],[r_qa]]]],[11,"dir",E,E,12,[[[r_fa]],[r_xa]]],[11,"set_prefix",E,E,12,[[[r_fa],[r_qa]]]],[11,"prefix",E,E,12,[[[r_fa]],[r_xa]]],[11,"set_mode",E,E,12,[[[r_fa],[r_wa]]]],[11,"store",E,E,12,[[[r_fa],[T],[r_xa]],[r_ma,[r_oa]]]],[11,"store_cond",E,E,12,[[[r_fa],[T],[r_ha]],[r_ma,[r_oa]]]],[11,r_la,E,"Returns `true` if a solver terminated and `false` otherwise",3,[[[r_fa]],[r_2b]]],[11,r_ca,E,"Returns a texual representation of what happened",3,[[[r_fa]],[r_qa]]],[0,"modcholesky",E,"Modified Cholesky decompositions Modified Cholesky…",N,N],[0,"utils",r_Aa,"Utility functions",N,N],[5,"eigenvalues_2x2","argmin_core::modcholesky::utils","Computes the Eigenvalues of a 2x2 matrix",N,N],[5,"swap_columns",E,"Swaps columns `idx1` and `idx2` of matrix `mat`",N,N],[5,"swap_rows",E,"Swaps rows `idx1` and `idx2` of matrix `mat`",N,N],[5,"index_of_largest",E,"Returns the index of the largest element in a 1D array",N,[[[r_ya]],[r_za]]],[5,"index_of_largest_abs",E,"Returns the index of the element with the largest absolute…",N,[[[r_ya]],[r_za]]],[5,"index_to_permutation_mat",E,"Returns the permutation matrix for a vector of permuted…",N,N],[5,"diag_mat_from_arr",E,"Builds a diagonal matrix from a 1D slice",N,N],[5,"random_householder",E,"Returns a random Householder matrix of dimension `dim` and…",N,[[[r_za],["u8"]],[r_ya,["ownedrepr","dim"]]]],[5,"random_diagonal",E,"Returns a random diagonal matrix with Eigenvalues…",N,N],[3,r_Ic,r_Aa,E,N,N],[12,"l",E,E,13,N],[12,"e",E,E,13,N],[12,"p",E,E,13,N],[8,r_Jc,E,"Gershgorin circles",N,N],[10,"gershgorin_circles",E,"Computes the Gershgorin Circles of a matrix",14,[[[r_fa]],["vec"]]],[8,r_Kc,E,"Gill, Murray and Wright (1981)",N,N],[11,r_pc,E,r_qc,15,[[[r_fa]],[r_Ba]]],[8,r_Lc,E,"Schnabel & Eskow algorithm (1999)",N,N],[11,r_rc,E,r_sc,16,[[[r_fa]],[r_Ba]]],[8,r_Mc,E,"Schnabel & Eskow algorithm (1990)",N,N],[11,r_tc,E,r_uc,17,[[[r_fa]],[r_Ba]]],[0,"finitediff",r_aa,"Finite Differentiation",N,N],[8,r_Nc,r_Wb,E,N,N],[16,"Jacobian",E,E,18,N],[16,r_Bb,E,E,18,N],[16,"OperatorOutput",E,E,18,N],[10,"forward_diff",E,"Forward difference calculated as",18,[[[r_fa],["fn"]],[r_fa]]],[10,"central_diff",E,"Central difference calculated as",18,[[[r_fa],["fn"]],[r_fa]]],[10,"forward_jacobian",E,r_Ca,18,N],[10,"central_jacobian",E,r_Ca,18,N],[10,"forward_jacobian_vec_prod",E,r_Da,18,[[[r_fa],["fn"],[r_fa]],[r_fa]]],[10,"central_jacobian_vec_prod",E,r_Da,18,[[[r_fa],["fn"],[r_fa]],[r_fa]]],[10,"forward_jacobian_pert",E,E,18,N],[10,"central_jacobian_pert",E,E,18,N],[10,"forward_hessian",E,"Calculation of the Hessian using forward differences",18,N],[10,"central_hessian",E,"Calculation of the Hessian using central differences",18,N],[10,"forward_hessian_vec_prod",E,r_Ea,18,[[[r_fa],["fn"],[r_fa]],[r_fa]]],[10,"central_hessian_vec_prod",E,r_Ea,18,[[[r_fa],["fn"],[r_fa]],[r_fa]]],[10,"forward_hessian_nograd",E,"Calculation of the Hessian using forward differences…",18,N],[10,"forward_hessian_nograd_sparse",E,"Calculation of a sparse Hessian using forward differences…",18,N],[3,r_Oc,E,"Perturbation Vector for the accelerated computation of the…",N,N],[12,"x_idx",E,"x indices",19,N],[12,"r_idx",E,"correspoding function indices",19,N],[6,"PerturbationVectors",E,"A collection of `PerturbationVector`s",N,N],[8,r_Pc,r_aa,r_Fa,N,N],[10,"dot",E,r_Fa,20,[[[r_fa],[T]],[U]]],[8,r_Qc,E,"Dot/scalar product of `T` and `self` weighted by W (p^TWv)",N,N],[10,"weighted_dot",E,r_Fa,21,[[[r_fa],["v"],[T]],[U]]],[8,r_Rc,E,"Return param vector of all zeros (for now, this is a hack.…",N,N],[10,"zero_like",E,r_Ga,22,[[[r_fa]],[r_fa]]],[10,"zero",E,r_Ga,22,[[],[r_fa]]],[8,r_Sc,E,E,N,N],[10,"eye",E,E,23,[[[r_za]],[r_fa]]],[10,"eye_like",E,E,23,[[[r_fa]],[r_fa]]],[8,r_Tc,E,r_Ha,N,N],[10,"add",E,r_Ha,24,[[[r_fa],[T]],[U]]],[8,r_Uc,E,r_Ia,N,N],[10,"sub",E,r_Ia,25,[[[r_fa],[T]],[U]]],[8,r_Vc,E,r_Ja,N,N],[10,"mul",E,r_Ja,26,[[[r_fa],[T]],[U]]],[8,r_Wc,E,r_Ka,N,N],[10,"div",E,r_Ka,27,[[[r_fa],[T]],[U]]],[8,r_Xc,E,r_La,N,N],[10,"scaled_add",E,r_La,28,[[[r_fa],[U],[T]],["v"]]],[8,r_Yc,E,r_Ma,N,N],[10,"scaled_sub",E,r_Ma,29,[[[r_fa],[U],[T]],["v"]]],[8,r_Zc,E,r_Na,N,N],[10,"norm",E,r_Na,30,[[[r_fa]],[U]]],[8,r_0c,E,E,N,N],[10,T,E,E,31,[[[r_fa]],[r_fa]]],[8,r_1c,E,"Compute the inverse (`T`) of `self`",N,N],[10,"inv",E,E,32,[[[r_fa]],[r_ma,[r_oa]]]],[8,r_2c,E,"Defines the interface to a solver. Usually, there is no…",N,N],[11,"from_checkpoint",E,"Load solver from checkpoint",33,[[["p"]],[r_ma,[r_oa]]]],[11,"from_latest_checkpoint",E,E,33,[[["p"],[r_qa]],[r_ma,[r_oa]]]],[10,r_Oa,E,"apply cost function or operator to a parameter vector",33,N],[10,r_Pa,E,"compute the gradient for a parameter vector",33,N],[10,r_Qa,E,"compute the hessian for a parameter vector",33,N],[10,r_Ra,E,"modify the parameter vector",33,N],[10,r_Sa,E,"return current parameter vector",33,N],[10,r_Ta,E,r_Va,33,N],[10,r_Ua,E,r_Va,33,N],[10,r_Wa,E,r_1a,33,N],[10,r_Xa,E,r_Za,33,N],[10,r_Ya,E,r_Za,33,N],[10,r_0a,E,r_1a,33,N],[10,"run",E,"Execute the optimization algorithm.",33,[[[r_fa]],[r_ma,[r_2a,r_oa]]]],[10,"run_fast",E,"Execute the optimization algorithm without Ctrl-C…",33,[[[r_fa]],[r_ma,[r_2a,r_oa]]]],[10,r_ma,E,"Returns the best solution found during optimization.",33,[[[r_fa]],[r_2a]]],[10,r_3a,E,"Set termination reason (doesn't terminate yet! -- this is…",33,[[[r_fa],[r_ka]]]],[10,"terminate",E,"Evaluate all stopping criterions and return the…",33,[[[r_fa]],[r_ka]]],[10,r_4a,E,"Set max number of iterations.",33,[[[r_fa],[r_ha]]]],[10,r_5a,E,"Get max number of iterations.",33,[[[r_fa]],[r_ha]]],[10,r_6a,E,"Get current iteration number.",33,[[[r_fa]],[r_ha]]],[10,r_7a,E,"Increment the iteration number by one",33,[[[r_fa]]]],[10,r_8a,E,r_ab,33,[[[r_fa]],[r_ga]]],[10,r_9a,E,r_ab,33,[[[r_fa],[r_ga]]]],[10,r_bb,E,"Get best cost function value",33,[[[r_fa]],[r_ga]]],[10,r_cb,E,"set best cost value",33,[[[r_fa],[r_ga]]]],[10,r_db,E,"Set the target cost function value which is used as a…",33,[[[r_fa],[r_ga]]]],[10,r_eb,E,"Add a logger to the array of loggers",33,[[[r_fa],[r_ra,[r_sa]]]]],[10,r_fb,E,"Add a writer to the array of writers",33,[[[r_fa],[r_ra,[r_va]]]]],[10,"base_reset",E,"Reset the base of the algorithm to its initial state",33,[[[r_fa]]]],[10,r_gb,E,r_hb,33,[[[r_fa]]]],[10,r_ib,E,r_jb,33,[[[r_fa],[r_ha]]]],[10,r_kb,E,r_lb,33,[[[r_fa]],[r_ha]]],[10,r_mb,E,r_nb,33,[[[r_fa]]]],[10,r_ob,E,r_pb,33,[[[r_fa],[r_ha]]]],[10,r_qb,E,r_ia,33,[[[r_fa]],[r_ha]]],[10,r_rb,E,r_sb,33,[[[r_fa]]]],[10,r_tb,E,r_ub,33,[[[r_fa],[r_ha]]]],[10,r_vb,E,r_ia,33,[[[r_fa]],[r_ha]]],[10,r_wb,E,r_xb,33,[[[r_fa],[r_qa]]]],[10,r_yb,E,r_zb,33,[[[r_fa],[r_qa]]]],[10,r_Ab,E,"Set checkpoint mode",33,[[[r_fa],[r_wa]]]],[8,r_3c,E,"Main part of every solver: `next_iter` computes one…",N,N],[16,r_Eb,E,"Parameter vectors",34,N],[16,r_Gb,E,"Output of the operator",34,N],[16,r_Bb,E,r_Bb,34,N],[10,"next_iter",E,"Computes one iteration of the algorithm.",34,[[[r_fa]],[r_ma,["argminiterdata",r_oa]]]],[11,"init",E,"Initializes the algorithm",34,[[[r_fa]],[r_ma,[r_oa]]]],[8,r_4c,E,"Defince the interface every logger needs to expose",N,N],[10,r_Cb,E,"Logs general information (a message `msg` and/or key-value…",35,[[[r_fa],[r_qa],[r_ea]],[r_ma,[r_oa]]]],[10,r_Db,E,"Logs information from iterations. Only accepts key-value…",35,[[[r_fa],[r_ea]],[r_ma,[r_oa]]]],[8,r_5c,E,"Every writer (which is something that writes parameter…",N,N],[16,r_Eb,E,E,36,N],[10,r_Fb,E,"Writes the parameter vector somewhere",36,N],[8,r_6c,E,"This trait needs to be implemented for every operator/cost…",N,N],[16,r_Eb,E,"Type of the parameter vector",37,N],[16,r_Gb,E,"Output of the operator. Most solvers expect `f64`.",37,N],[16,r_Bb,E,"Type of Hessian",37,N],[11,r_Oa,E,"Applies the operator/cost function to parameters",37,N],[11,r_Pa,E,"Computes the gradient at the given parameters",37,N],[11,r_Qa,E,"Computes the hessian at the given parameters",37,N],[11,r_Ra,E,"Modifies a parameter vector. Comes with a variable that…",37,N],[8,r_7c,E,"Defines a common interface to line search methods.…",N,N],[10,"set_initial_parameter",E,"Set the initial parameter (starting point)",38,N],[10,"set_search_direction",E,"Set the search direction",38,N],[10,"set_initial_alpha",E,r_Hb,38,[[[r_fa],[r_ga]],[r_ma,[r_oa]]]],[10,"set_initial_cost",E,"Set the cost function value at the starting point as…",38,[[[r_fa],[r_ga]]]],[10,"set_initial_gradient",E,"Set the gradient at the starting point as opposed to…",38,N],[10,"calc_initial_cost",E,"calculate the initial cost function value using an…",38,[[[r_fa]],[r_ma,[r_oa]]]],[10,"calc_initial_gradient",E,"calculate the initial gradient using an operator as…",38,[[[r_fa]],[r_ma,[r_oa]]]],[8,r_8c,E,"Defines a common interface to methods which calculate…",N,N],[10,"set_radius",E,r_Hb,39,[[[r_fa],[r_ga]]]],[10,"set_grad",E,r_Ib,39,N],[10,"set_hessian",E,r_Ib,39,N],[8,r_9c,E,"Every method for the update of beta needs to implement…",N,N],[10,"update",E,"Update beta Parameter 1: \\nabla f_k Parameter 2: \\nabla…",40,[[[r_fa],[T],[T],[T]],[r_ga]]],[11,r_ta,E,r_pa,41,[[[T],[r_ga]],[r_fa]]],[11,r_Jb,E,"Returns the parameter vector",41,[[[r_fa]],[T]]],[11,"cost",E,"Returns the cost function value",41,[[[r_fa]],[r_ga]]],[11,"add_kv",E,"Adds an `ArgminKV`",41,[[[r_fa],[r_ea]],[r_fa]]],[11,"get_kv",E,"Returns an `ArgminKV`",41,[[[r_fa]],[r_bc,[r_ea]]]],[14,"make_kv",E,"Creates an `ArgminKV` at compile time in order to avoid…",N,N],[14,"check_param",E,"Release an `T` from an `Option<T>` if it is not `None`. If…",N,N],[11,r_Qb,E,E,42,[[[r_fa]],[r_xa]]],[11,r_Rb,E,E,42,[[[T]],[T]]],[11,r_Sb,E,E,42,[[[r_fa]],[U]]],[11,r_Kb,E,E,42,[[[U]],[r_ma]]],[11,r_Lb,E,E,42,[[[r_fa]],[T]]],[11,r_Mb,E,E,42,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,42,[[[r_fa]],[T]]],[11,r_Pb,E,E,42,[[[r_fa]],[r_ma]]],[11,r_Vb,E,E,42,[[[r_fa]],[r_Xb]]],[11,r_Rb,E,E,5,[[[T]],[T]]],[11,r_Sb,E,E,5,[[[r_fa]],[U]]],[11,r_Tb,E,E,5,[[[r_fa]],[T]]],[11,r_Ub,E,E,5,N],[11,r_Kb,E,E,5,[[[U]],[r_ma]]],[11,r_Lb,E,E,5,[[[r_fa]],[T]]],[11,r_Mb,E,E,5,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,5,[[[r_fa]],[T]]],[11,r_Pb,E,E,5,[[[r_fa]],[r_ma]]],[11,r_Qb,E,E,0,[[[r_fa]],[r_xa]]],[11,r_Rb,E,E,0,[[[T]],[T]]],[11,r_Sb,E,E,0,[[[r_fa]],[U]]],[11,r_Tb,E,E,0,[[[r_fa]],[T]]],[11,r_Ub,E,E,0,N],[11,r_Kb,E,E,0,[[[U]],[r_ma]]],[11,r_Lb,E,E,0,[[[r_fa]],[T]]],[11,r_Mb,E,E,0,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,0,[[[r_fa]],[T]]],[11,r_Pb,E,E,0,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,6,[[[T]],[T]]],[11,r_Sb,E,E,6,[[[r_fa]],[U]]],[11,r_Tb,E,E,6,[[[r_fa]],[T]]],[11,r_Ub,E,E,6,N],[11,r_Kb,E,E,6,[[[U]],[r_ma]]],[11,r_Lb,E,E,6,[[[r_fa]],[T]]],[11,r_Mb,E,E,6,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,6,[[[r_fa]],[T]]],[11,r_Pb,E,E,6,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,7,[[[T]],[T]]],[11,r_Sb,E,E,7,[[[r_fa]],[U]]],[11,r_Tb,E,E,7,[[[r_fa]],[T]]],[11,r_Ub,E,E,7,N],[11,r_Kb,E,E,7,[[[U]],[r_ma]]],[11,r_Lb,E,E,7,[[[r_fa]],[T]]],[11,r_Mb,E,E,7,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,7,[[[r_fa]],[T]]],[11,r_Pb,E,E,7,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,8,[[[T]],[T]]],[11,r_Sb,E,E,8,[[[r_fa]],[U]]],[11,r_Tb,E,E,8,[[[r_fa]],[T]]],[11,r_Ub,E,E,8,N],[11,r_Kb,E,E,8,[[[U]],[r_ma]]],[11,r_Lb,E,E,8,[[[r_fa]],[T]]],[11,r_Mb,E,E,8,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,8,[[[r_fa]],[T]]],[11,r_Pb,E,E,8,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,9,[[[T]],[T]]],[11,r_Sb,E,E,9,[[[r_fa]],[U]]],[11,r_Tb,E,E,9,[[[r_fa]],[T]]],[11,r_Ub,E,E,9,N],[11,r_Kb,E,E,9,[[[U]],[r_ma]]],[11,r_Lb,E,E,9,[[[r_fa]],[T]]],[11,r_Mb,E,E,9,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,9,[[[r_fa]],[T]]],[11,r_Pb,E,E,9,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,10,[[[T]],[T]]],[11,r_Sb,E,E,10,[[[r_fa]],[U]]],[11,r_Kb,E,E,10,[[[U]],[r_ma]]],[11,r_Lb,E,E,10,[[[r_fa]],[T]]],[11,r_Mb,E,E,10,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,10,[[[r_fa]],[T]]],[11,r_Pb,E,E,10,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,11,[[[T]],[T]]],[11,r_Sb,E,E,11,[[[r_fa]],[U]]],[11,r_Tb,E,E,11,[[[r_fa]],[T]]],[11,r_Ub,E,E,11,N],[11,r_Kb,E,E,11,[[[U]],[r_ma]]],[11,r_Lb,E,E,11,[[[r_fa]],[T]]],[11,r_Mb,E,E,11,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,11,[[[r_fa]],[T]]],[11,r_Pb,E,E,11,[[[r_fa]],[r_ma]]],[11,r_Qb,E,E,1,[[[r_fa]],[r_xa]]],[11,r_Rb,E,E,1,[[[T]],[T]]],[11,r_Sb,E,E,1,[[[r_fa]],[U]]],[11,r_Tb,E,E,1,[[[r_fa]],[T]]],[11,r_Ub,E,E,1,N],[11,r_Kb,E,E,1,[[[U]],[r_ma]]],[11,r_Lb,E,E,1,[[[r_fa]],[T]]],[11,r_Mb,E,E,1,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,1,[[[r_fa]],[T]]],[11,r_Pb,E,E,1,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,12,[[[T]],[T]]],[11,r_Sb,E,E,12,[[[r_fa]],[U]]],[11,r_Tb,E,E,12,[[[r_fa]],[T]]],[11,r_Ub,E,E,12,N],[11,r_Kb,E,E,12,[[[U]],[r_ma]]],[11,r_Lb,E,E,12,[[[r_fa]],[T]]],[11,r_Mb,E,E,12,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,12,[[[r_fa]],[T]]],[11,r_Pb,E,E,12,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,41,[[[T]],[T]]],[11,r_Sb,E,E,41,[[[r_fa]],[U]]],[11,r_Kb,E,E,41,[[[U]],[r_ma]]],[11,r_Lb,E,E,41,[[[r_fa]],[T]]],[11,r_Mb,E,E,41,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,41,[[[r_fa]],[T]]],[11,r_Pb,E,E,41,[[[r_fa]],[r_ma]]],[11,r_Qb,E,E,2,[[[r_fa]],[r_xa]]],[11,r_Rb,E,E,2,[[[T]],[T]]],[11,r_Sb,E,E,2,[[[r_fa]],[U]]],[11,r_Kb,E,E,2,[[[U]],[r_ma]]],[11,r_Lb,E,E,2,[[[r_fa]],[T]]],[11,r_Mb,E,E,2,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,2,[[[r_fa]],[T]]],[11,r_Pb,E,E,2,[[[r_fa]],[r_ma]]],[11,r_Vb,E,E,2,[[[r_fa]],[r_Xb]]],[11,r_Qb,E,E,3,[[[r_fa]],[r_xa]]],[11,r_Rb,E,E,3,[[[T]],[T]]],[11,r_Sb,E,E,3,[[[r_fa]],[U]]],[11,r_Tb,E,E,3,[[[r_fa]],[T]]],[11,r_Ub,E,E,3,N],[11,r_Kb,E,E,3,[[[U]],[r_ma]]],[11,r_Lb,E,E,3,[[[r_fa]],[T]]],[11,r_Mb,E,E,3,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,3,[[[r_fa]],[T]]],[11,r_Pb,E,E,3,[[[r_fa]],[r_ma]]],[11,r_Rb,E,E,4,[[[T]],[T]]],[11,r_Sb,E,E,4,[[[r_fa]],[U]]],[11,r_Tb,E,E,4,[[[r_fa]],[T]]],[11,r_Ub,E,E,4,N],[11,r_Kb,E,E,4,[[[U]],[r_ma]]],[11,r_Lb,E,E,4,[[[r_fa]],[T]]],[11,r_Mb,E,E,4,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,4,[[[r_fa]],[T]]],[11,r_Pb,E,E,4,[[[r_fa]],[r_ma]]],[11,r_Rb,r_Aa,E,13,[[[T]],[T]]],[11,r_Sb,E,E,13,[[[r_fa]],[U]]],[11,r_Kb,E,E,13,[[[U]],[r_ma]]],[11,r_Lb,E,E,13,[[[r_fa]],[T]]],[11,r_Mb,E,E,13,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,13,[[[r_fa]],[T]]],[11,r_Pb,E,E,13,[[[r_fa]],[r_ma]]],[11,r_Rb,r_Wb,E,19,[[[T]],[T]]],[11,r_Sb,E,E,19,[[[r_fa]],[U]]],[11,r_Tb,E,E,19,[[[r_fa]],[T]]],[11,r_Ub,E,E,19,N],[11,r_Kb,E,E,19,[[[U]],[r_ma]]],[11,r_Lb,E,E,19,[[[r_fa]],[T]]],[11,r_Mb,E,E,19,[[[r_fa]],[r_Nb]]],[11,r_Ob,E,E,19,[[[r_fa]],[T]]],[11,r_Pb,E,E,19,[[[r_fa]],[r_ma]]],[11,r_dc,r_aa,E,42,[[[r_fa],[r_Yb]],[r_ma,[r_oa]]]],[11,r_Vb,E,E,42,[[[r_fa]],[r_Xb]]],[11,"as_ref",E,E,42,[[[r_fa]],[r_Xb]]],[11,r_dc,E,E,42,[[[r_fa],[r_Yb]],[r_ma,[r_oa]]]],[11,r_Rb,E,E,42,[[["f"]],[r_oa]]],[11,r_4b,r_Wb,E,19,[[],[r_Zb]]],[11,r_5b,E,E,19,[[[r_fa]],[r_Zb]]],[11,r_Cb,r_aa,r_0b,6,[[[r_fa],[r_qa],[r_ea]],[r_ma,[r_oa]]]],[11,r_Db,E,r_1b,6,[[[r_fa],[r_ea]],[r_ma,[r_oa]]]],[11,r_Cb,E,r_0b,7,[[[r_fa],[r_qa],[r_ea]],[r_ma,[r_oa]]]],[11,r_Db,E,r_1b,7,[[[r_fa],[r_ea]],[r_ma,[r_oa]]]],[11,r_Fb,E,E,10,[[[r_fa],[T]],[r_ma,[r_oa]]]],[11,r_Fb,E,E,11,[[[r_fa],[T]],[r_ma,[r_oa]]]],[11,r_Oa,E,E,8,N],[11,r_Pa,E,E,8,N],[11,r_Qa,E,E,8,N],[11,r_Ra,E,E,8,N],[11,r_Oa,E,E,9,N],[11,r_Pa,E,E,9,N],[11,r_Qa,E,E,9,N],[11,r_Ra,E,E,9,N],[11,"eq",E,E,0,[[[r_fa],[r_ea]],[r_2b]]],[11,"ne",E,E,0,[[[r_fa],[r_ea]],[r_2b]]],[11,"eq",E,E,1,[[[r_fa],[r_2a]],[r_2b]]],[11,"eq",E,E,4,[[[r_fa],[r_wa]],[r_2b]]],[11,"ne",E,E,4,[[[r_fa],[r_wa]],[r_2b]]],[11,"eq",E,E,12,[[[r_fa],[r_3b]],[r_2b]]],[11,"ne",E,E,12,[[[r_fa],[r_3b]],[r_2b]]],[11,"eq",E,E,3,[[[r_fa],[r_ka]],[r_2b]]],[11,r_4b,E,E,0,[[],[r_ea]]],[11,r_4b,E,E,7,[[],[r_6b]]],[11,r_4b,E,E,8,[[],[r_7b]]],[11,r_4b,E,E,9,[[],[r_8b]]],[11,r_4b,E,E,11,[[],[r_9b]]],[11,r_4b,E,E,1,[[],[r_2a]]],[11,r_4b,E,E,4,[[],[r_wa]]],[11,r_4b,E,E,12,[[],[r_3b]]],[11,r_4b,E,E,3,[[],[r_fa]]],[11,r_5b,E,E,5,[[[r_fa]],["argminbase"]]],[11,r_5b,E,E,0,[[[r_fa]],[r_ea]]],[11,r_5b,E,E,6,[[[r_fa]],["argminsloglogger"]]],[11,r_5b,E,E,7,[[[r_fa]],[r_6b]]],[11,r_5b,E,E,8,[[[r_fa]],[r_7b]]],[11,r_5b,E,E,9,[[[r_fa]],[r_8b]]],[11,r_5b,E,E,11,[[[r_fa]],[r_9b]]],[11,r_5b,E,E,1,[[[r_fa]],[r_2a]]],[11,r_5b,E,E,4,[[[r_fa]],[r_wa]]],[11,r_5b,E,E,12,[[[r_fa]],[r_3b]]],[11,r_5b,E,E,3,[[[r_fa]],[r_ka]]],[11,"cmp",E,E,0,[[[r_fa],[r_ea]],[r_ac]]],[11,"cmp",E,E,1,[[[r_fa],[r_2a]],[r_ac]]],[11,"cmp",E,E,4,[[[r_fa],[r_wa]],[r_ac]]],[11,"cmp",E,E,12,[[[r_fa],[r_3b]],[r_ac]]],[11,"cmp",E,E,3,[[[r_fa],[r_ka]],[r_ac]]],[11,"extend",E,E,0,[[[r_fa],["i"]]]],[11,r_cc,E,E,0,[[[r_fa],[r_ea]],[r_bc,[r_ac]]]],[11,"lt",E,E,0,[[[r_fa],[r_ea]],[r_2b]]],[11,"le",E,E,0,[[[r_fa],[r_ea]],[r_2b]]],[11,"gt",E,E,0,[[[r_fa],[r_ea]],[r_2b]]],[11,"ge",E,E,0,[[[r_fa],[r_ea]],[r_2b]]],[11,r_cc,E,E,1,[[[r_fa],[r_2a]],[r_bc,[r_ac]]]],[11,r_cc,E,E,4,[[[r_fa],[r_wa]],[r_bc,[r_ac]]]],[11,"lt",E,E,4,[[[r_fa],[r_wa]],[r_2b]]],[11,"le",E,E,4,[[[r_fa],[r_wa]],[r_2b]]],[11,"gt",E,E,4,[[[r_fa],[r_wa]],[r_2b]]],[11,"ge",E,E,4,[[[r_fa],[r_wa]],[r_2b]]],[11,r_cc,E,E,12,[[[r_fa],[r_3b]],[r_bc,[r_ac]]]],[11,"lt",E,E,12,[[[r_fa],[r_3b]],[r_2b]]],[11,"le",E,E,12,[[[r_fa],[r_3b]],[r_2b]]],[11,"gt",E,E,12,[[[r_fa],[r_3b]],[r_2b]]],[11,"ge",E,E,12,[[[r_fa],[r_3b]],[r_2b]]],[11,r_cc,E,E,3,[[[r_fa],[r_ka]],[r_bc,[r_ac]]]],[11,r_dc,E,E,2,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,0,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,1,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,3,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,5,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,2,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,0,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,8,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,9,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,1,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,4,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,12,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_dc,E,E,3,[[[r_fa],[r_Yb]],[r_ma]]],[11,r_ec,E,E,0,N],[11,r_ec,E,E,4,N],[11,r_ec,E,E,12,N],[11,r_ec,E,E,3,N],[11,"from_iter",E,E,0,[[["i"]],[r_fa]]],[11,r_fc,E,E,5,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,0,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,8,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,9,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,1,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,4,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,12,[[[r_fa],[r_gc]],[r_ma]]],[11,r_fc,E,E,3,[[[r_fa],[r_gc]],[r_ma]]],[11,r_hc,E,E,5,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,0,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,8,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,9,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,1,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,4,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,12,[[[r_ic]],[r_ma]]],[11,r_hc,E,E,3,[[[r_ic]],[r_ma]]],[11,"name",E,E,2,[[[r_fa]],[r_bc,[r_qa]]]],[11,r_kc,E,E,2,[[[r_fa]],[r_bc,[r_Xb]]]],[11,r_jc,E,E,2,[[[r_fa]],[r_bc,[r_jc]]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",42,[[["box",[r_oa]]],[r_oa]]],[11,r_Vb,E,"Return a reference to the underlying failure that this…",42,[[[r_fa]],[r_Xb]]],[11,"name",E,"Returns the name of the underlying fail.",42,[[[r_fa]],[r_bc,[r_qa]]]],[11,r_kc,E,"Returns a reference to the underlying cause of this…",42,[[[r_fa]],[r_Xb]]],[11,r_jc,E,"Gets a reference to the `Backtrace` for this `Error`.",42,[[[r_fa]],[r_jc]]],[11,r_lc,E,"Provides context for this `Error`.",42,[[[r_fa],["d"]],[r_lc]]],[11,r_mc,E,"Wraps `Error` in a compatibility type.",42,[[[r_fa]],[r_mc,[r_oa]]]],[11,"downcast",E,r_oc,42,[[[r_fa]],[r_ma,[r_oa]]]],[11,"find_root_cause",E,"Returns the \"root cause\" of this error - the last value in…",42,[[[r_fa]],[r_Xb]]],[11,"iter_causes",E,"Returns a iterator over the causes of this error with the…",42,[[[r_fa]],[r_nc]]],[11,"iter_chain",E,"Returns a iterator over all fails up the chain from the…",42,[[[r_fa]],[r_nc]]],[11,"downcast_ref",E,r_oc,42,[[[r_fa]],[r_bc]]],[11,"downcast_mut",E,r_oc,42,[[[r_fa]],[r_bc]]],[11,"root_cause",E,"Deprecated alias to `find_root_cause`.",42,[[[r_fa]],[r_Xb]]],[11,r_nc,E,"Deprecated alias to `iter_causes`.",42,[[[r_fa]],[r_nc]]],[11,r_ta,r_Aa,E,13,[[["l"],["e"],["p"]],[r_Ba]]],[11,r_pc,E,r_qc,15,[[[r_fa]],[r_Ba]]],[11,r_rc,E,r_sc,16,[[[r_fa]],[r_Ba]]],[11,r_tc,E,r_uc,17,[[[r_fa]],[r_Ba]]],[11,r_ta,r_Wb,"Create a new empty `PerturbationVector`",19,[[],[r_Zb]]],[11,"add",E,"Add an index `x_idx` and the corresponding function…",19,[[[r_fa],[r_za],["vec",[r_za]]],[r_Zb]]]],"p":[[3,r_vc],[3,r_wc],[4,r_xc],[4,r_yc],[4,r_zc],[3,r_Ac],[3,r_Bc],[3,r_Cc],[3,r_Dc],[3,r_Ec],[3,r_Fc],[3,r_Gc],[3,r_Hc],[3,r_Ic],[8,r_Jc],[8,r_Kc],[8,r_Lc],[8,r_Mc],[8,r_Nc],[3,r_Oc],[8,r_Pc],[8,r_Qc],[8,r_Rc],[8,r_Sc],[8,r_Tc],[8,r_Uc],[8,r_Vc],[8,r_Wc],[8,r_Xc],[8,r_Yc],[8,r_Zc],[8,r_0c],[8,r_1c],[8,r_2c],[8,r_3c],[8,r_4c],[8,r_5c],[8,r_6c],[8,r_7c],[8,r_8c],[8,r_9c],[3,r_ad],[3,r_bd]]};
initSearch(searchIndex);addSearchOptions(searchIndex);